# -*- coding: utf-8 -*-
"""PR2 Pedro y Lila.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16DFgtcp5iwvoCbimC-z8ERKzFG-8cA2g
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
data = pd.read_csv('https://raw.githubusercontent.com/pedroest13/PR2/main/Housing.csv')
data.head()

data.info()

#Transformacion
def transform():
  df.drop(columns='furnishingstatus')
transform()

def load(file):
  df.to_csv(file)

#Definir variables de interes
yvar = ['price']
Xvars = ['area', 'bedrooms','bathrooms','stories','parking']
yvar_pred = [yvar[0] + 'predicted']

#Separar Variables
y = df[yvar]
X = df[Xvars]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state = 0)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(X_train)

X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

#Entrenamiento
# Creando el modelo
from sklearn.neural_network import MLPRegressor
from sklearn.ensemble import RandomForestRegressor

modelo = MLPRegressor(solver='lbfgs', max_iter=1500, random_state=1,hidden_layer_sizes=(30,))

# modelo = RandomForestRegressor(random_state=1)    # Regresi√≥n bosques aleatorios

# Entrenando el modelo
modelo.fit(X_train, y_train.values.ravel())

#Evaluacion
df[yvar_pred[0]] = modelo.predict(X)
y_eval = modelo.predict(X_test)
from sklearn.metrics import r2_score, mean_squared_error


r2 = r2_score(y_test, y_eval)
r2

sns.pairplot(df, x_vars = Xvars, y_vars = yvar + yvar_pred)

#Prediccion
x_pred = pd.DataFrame({'area': [3000],
                       'bathrooms': [12],
                       'bedrooms': [10],
                       'stories': [3],
                       'parking': [2]})

y_pred = modelo.predict(x_pred)
y_pred